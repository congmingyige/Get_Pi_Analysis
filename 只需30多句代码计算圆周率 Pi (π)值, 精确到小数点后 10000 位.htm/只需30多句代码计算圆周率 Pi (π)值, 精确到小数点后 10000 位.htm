<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0055)http://www.cppfans.com/articles/basecalc/c_pi_10000.asp -->
<HTML><HEAD><META content="IE=8.0000" http-equiv="X-UA-Compatible">
<TITLE>只需30多句代码计算圆周率 Pi (π)值, 精确到小数点后 10000 位</TITLE>
<META http-equiv=X-UA-Compatible content=IE=8>
<META http-equiv=Content-Type content="text/html; charset=utf-8"><LINK 
href="只需30多句代码计算圆周率%20Pi%20(π)值,%20精确到小数点后%2010000%20位_files/maintypes.css" 
rel=stylesheet type=text/css>
<SCRIPT>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?15fa8bd2bffbb828e1543dd5b7f61bec";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</SCRIPT>

<META name=GENERATOR content="MSHTML 11.00.10570.1001"></HEAD>
<BODY text=#000000 bgColor=#ffffff>
<TABLE width="100%" align=center border=0 cellSpacing=0 cellPadding=0>
  <TBODY>
  <TR bgColor=#ffffff>
    <TD>
      <TABLE width="100%" align=center class=SimSong9 border=0 cellSpacing=0 
      cellPadding=0>
        <TBODY>
        <TR bgColor=#ffffff>
          <TD>
            <TABLE width="100%" border=0 cellSpacing=0 cellPadding=0>
              <TBODY>
              <TR>
                <TD width=220 align=left><IMG 
                  src="只需30多句代码计算圆周率%20Pi%20(π)值,%20精确到小数点后%2010000%20位_files/logo_cppfans.gif" 
                  border=0></TD>
                <TD align=center><IMG 
                  src="只需30多句代码计算圆周率%20Pi%20(π)值,%20精确到小数点后%2010000%20位_files/logo_components.gif" 
                  border=0></TD>
                <TD width=220 align=right>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
        <TR bgColor=#000080>
          <TD>
            <TABLE width="100%" height=25 class=SimSong9 border=0 cellSpacing=0 
            cellPadding=0>
              <TBODY>
              <TR>
                <TD width=42 align=center><A class=mmenu 
                  href="http://www.cppfans.com/">首页</A></TD>
                <TD width=64 align=center><A class=mmenu 
                  href="http://www.cppfans.com/articles/">程序源码</A></TD>
                <TD width=64 align=center><A class=mmenu 
                  href="http://www.cppfans.com/vcl/">VCL控件</A></TD>
                <TD width=64 align=center><A class=mmenu 
                  href="http://www.cppfans.com/legacy_dos/">怀旧DOS</A></TD>
                <TD width=64 align=center><A class=mmenu 
                  href="http://www.cppfans.com/software/">软件发布</A></TD>
                <TD width=64 align=center><A class=mmenu 
                  href="http://blog.csdn.net/victorcppfans/" 
                  target=_blank>网友留言</A> </TD>
                <TD width=2 align=center></TD>
                <TD align=center><IMG 
                  src="只需30多句代码计算圆周率%20Pi%20(π)值,%20精确到小数点后%2010000%20位_files/empty.gif">
                  <MARQUEE width="98%" class=SimSong9 onmouseover=this.stop() 
                  onmouseout=this.start() behavior=alternative><FONT 
                  color=#9999cc>欢迎访问编程爱好者网站</FONT></MARQUEE></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></TD></TR>
  <TR vAlign=top bgColor=#f0f0ff>
    <TD>
      <TABLE width="100%" border=0 cellSpacing=2 cellPadding=0>
        <TBODY>
        <TR>
          <TD class=SimSong9 vAlign=top>
            <P>&nbsp;</P>
            <P align=center class=SimSong12>计算圆周率 Pi (π)值, 精确到小数点后 10000 
            位<BR>只需要 30 多句代码！<BR><SPAN class=SimSong9>(浏览 126732 次)</SPAN></P>
            <P align=center class=SimSong9>Victor Chen, <A 
            href="http://www.cppfans.com/">(C++ 爱好者)</A></P>
            <P class=SimSong9>大家都知道π=3.1415926……无穷多位, 历史上很多人都在计算这个数, 
            一直认为是一个非常复杂的问题。现在有了电脑, 这个问题就简单了。<BR>电脑可以利用级数计算出很多高精度的值, 
            有关级数的问题请参考《高等数学》,以下是比较有名的有关π的级数:</P>
            <P align=center class=SimSong9><IMG width=283 height=262 
            src="只需30多句代码计算圆周率%20Pi%20(π)值,%20精确到小数点后%2010000%20位_files/CalcPi.gif"></P>
            <P class=SimSong9>其中有些计算起来很复杂, 我们可以选用第三个, 比较简单, 并且收敛的非常快。<BR>因为计算π值, 
            而这个公式是计算π/2的, 我们把它变形:<BR>π = 2 + 2/3 + 2/3*2/5 + 2/3*2/5*3/7 + ... 
            </P>
            <HR SIZE=1 noShade>

            <P class=SimSong9>对于级数, 我们先做个简单测试, 暂时不要求精度:<BR>用 C++ Builder 新建一个工程, 
            在 Form 上放一个 Memo1 和 一个 Button1, 在 Button1 的 OnClick 事件写:</P>
            <TABLE width=600 align=center border=1>
              <TBODY>
              <TR>
                <TD width=536 class=SimSong9>void __fastcall 
                  TForm1::Button1Click(TObject *Sender)<BR>{<BR>&nbsp; double 
                  x=2, z=2;<BR>&nbsp; int a=1, b=3;<BR>&nbsp; 
                  while(z&gt;1e-15)<BR>&nbsp; {<BR>&nbsp;&nbsp;&nbsp; z = 
                  z*a/b;<BR>&nbsp;&nbsp;&nbsp; x += z;<BR>&nbsp;&nbsp;&nbsp; 
                  a++;<BR>&nbsp;&nbsp;&nbsp; b+=2;<BR>&nbsp; }<BR>&nbsp; 
                  Memo1-&gt;Text = AnsiString().sprintf("Pi=%.13f", 
              x);<BR>}</TD></TR></TBODY></TABLE>
            <P 
            class=SimSong9>按Button1在Memo1显示出执行结果:<BR><BR>Pi=3.1415926535898</P>
            <HR SIZE=1 noShade>

            <P class=SimSong9>这个程序太简单了, 而且 double 的精度很低, 只能计算到小数点后 10 
            几位。<BR>把上面的程序改造一下, 让它精确到小数点后面 1000 位再测试一下:<BR>在 Form 上再放一个按钮 
            Button2, 在这个按钮的 OnClick 事件写:</P>
            <TABLE width=600 align=center border=1>
              <TBODY>
              <TR>
                <TD width=479 class=SimSong9>void __fastcall 
                  TForm1::Button2Click(TObject *Sender)<BR>{<BR>&nbsp; const 
                  ARRSIZE=1010, DISPCNT=1000; //定义数组大小，显示位数<BR>&nbsp; char 
                  x[ARRSIZE], z[ARRSIZE]; //x[0] x[1] . x[2] x[3] x[4] .... 
                  x[ARRSIZE-1]<BR>&nbsp; int a=1, b=3, c, d, Run=1, 
                  Cnt=0;<BR><BR>&nbsp; memset(x,0,ARRSIZE);<BR>&nbsp; 
                  memset(z,0,ARRSIZE);<BR><BR>&nbsp; x[1] = 2;<BR>&nbsp; z[1] = 
                  2;<BR><BR>&nbsp; while(Run &amp;&amp; 
                  (++Cnt&lt;200000000))<BR>&nbsp; {<BR>&nbsp;&nbsp;&nbsp; 
                  //z*=a;<BR>&nbsp;&nbsp;&nbsp; d = 0;<BR>&nbsp;&nbsp;&nbsp; 
                  for(int i=ARRSIZE-1; i&gt;0; i--)<BR>&nbsp;&nbsp;&nbsp; 
                  {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; c = z[i]*a + 
                  d;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; z[i] = c % 
                  10;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; d = c / 
                  10;<BR>&nbsp;&nbsp;&nbsp; }<BR>&nbsp;&nbsp;&nbsp; 
                  //z/=b;<BR>&nbsp;&nbsp;&nbsp; d = 0;<BR>&nbsp;&nbsp;&nbsp; 
                  for(int i=0; i&lt;ARRSIZE; i++)<BR>&nbsp;&nbsp;&nbsp; 
                  {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; c = 
                  z[i]+d*10;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; z[i] = c / 
                  b;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; d = c % 
                  b;<BR>&nbsp;&nbsp;&nbsp; }<BR>&nbsp;&nbsp;&nbsp; 
                  //x+=z;<BR>&nbsp;&nbsp;&nbsp; Run = 0;<BR>&nbsp;&nbsp;&nbsp; 
                  for(int i=ARRSIZE-1; i&gt;0; i--)<BR>&nbsp;&nbsp;&nbsp; 
                  {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; c = x[i] + 
                  z[i];<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x[i] = 
                  c%10;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x[i-1] += 
                  c/10;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Run |= 
                  z[i];<BR>&nbsp;&nbsp;&nbsp; }<BR>&nbsp;&nbsp;&nbsp; 
                  a++;<BR>&nbsp;&nbsp;&nbsp; b+=2;<BR>&nbsp; }<BR>&nbsp; 
                  Memo1-&gt;Text = AnsiString().sprintf("计算了 %d 
                  次\r\n",Cnt);<BR>&nbsp; Memo1-&gt;Text = Memo1-&gt;Text + 
                  AnsiString().sprintf("Pi=%d%d.\r\n", x[0],x[1]);<BR>&nbsp; 
                  for(int i=0; i&lt;DISPCNT; i++)<BR>&nbsp; 
                  {<BR>&nbsp;&nbsp;&nbsp; if(i &amp;&amp; 
                  ((i%100)==0))<BR>&nbsp;&nbsp;&nbsp; Memo1-&gt;Text = 
                  Memo1-&gt;Text + "\r\n";<BR>&nbsp;&nbsp;&nbsp; Memo1-&gt;Text 
                  = Memo1-&gt;Text + (int)x[i+2];<BR>&nbsp; 
            }<BR>}</TD></TR></TBODY></TABLE>
            <P class=SimSong9>按 Button2 执行结果:</P>
            <P 
            class=SimSong9>Pi=03.<BR>1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679<BR>8214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196<BR>4428810975665933446128475648233786783165271201909145648566923460348610454326648213393607260249141273<BR>7245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094<BR>3305727036575959195309218611738193261179310511854807446237996274956735188575272489122793818301194912<BR>9833673362440656643086021394946395224737190702179860943702770539217176293176752384674818467669405132<BR>0005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235<BR>4201995611212902196086403441815981362977477130996051870721134999999837297804995105973173281609631859<BR>5024459455346908302642522308253344685035261931188171010003137838752886587533208381420617177669147303<BR>5982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989</P>
            <HR SIZE=1 noShade>

            <P class=SimSong9>这下心理有底了, 
            是不是改变数组大小就可以计算更多位数呢？答案是肯定的。<BR>如果把定义数组大小和显示位数改为:<BR><BR>const 
            ARRSIZE=10100, DISPCNT=10000; //定义数组大小，显示位数<BR><BR>执行结果精度可达 10000 
            位:<BR><BR>Pi=03.<BR>1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679<BR>8214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196<BR>4428810975665933446128475648233786783165271201909145648566923460348610454326648213393607260249141273<BR>7245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094<BR>3305727036575959195309218611738193261179310511854807446237996274956735188575272489122793818301194912<BR>9833673362440656643086021394946395224737190702179860943702770539217176293176752384674818467669405132<BR>0005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235<BR>4201995611212902196086403441815981362977477130996051870721134999999837297804995105973173281609631859<BR>5024459455346908302642522308253344685035261931188171010003137838752886587533208381420617177669147303<BR>5982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989<BR>3809525720106548586327886593615338182796823030195203530185296899577362259941389124972177528347913151<BR><BR>... 
            限于篇幅, 这里就省略了, 
            还是留给你自己来算吧！<BR><BR>5020141020672358502007245225632651341055924019027421624843914035998953539459094407046912091409387001<BR>2645600162374288021092764579310657922955249887275846101264836999892256959688159205600101655256375678</P>
            <HR SIZE=1 noShade>

            <P class=SimSong9>提高精度的原理:<BR><BR>以上程序的原理是利用数组把计算结果保存起来, 
            其中数组每一项保存10进制数的一位,<BR>小数点定位在数组第1个数和第二个数之间, 即小数点前面2位整数, 
            其余都是小数位。<BR><BR>利用电脑模拟四则运算的笔算方法来实现高精度的数据计算,没想到最原始的方法竟然是精度最高的。</P>
            <P align=center class=SimSong9><IMG width=173 height=129 
            src="只需30多句代码计算圆周率%20Pi%20(π)值,%20精确到小数点后%2010000%20位_files/CalcPi1.gif"></P>
            <P align=center class=SimSong9> </P></TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD>
      <TABLE width="100%" align=center class=SimSong9 bgColor=#99ccff border=0 
      cellSpacing=0 cellPadding=3>
        <TBODY>
        <TR height=32>
          <TD width=260 align=left>C++ 爱好者 <FONT color=#0088ff>-- Victor Chen 
            的个人主页</FONT></TD>
          <TD align=center><A class=llinks9 
            href="http://www.cppfans.com/">http://www.cppfans.com/</A></TD>
          <TD width=260 align=right><A class=llinks9 
            href="http://www.miibeian.gov.cn/" 
          target=_blank>辽ICP备11016859号</A></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></BODY></HTML>
